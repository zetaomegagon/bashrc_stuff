printf "" > .bash_history 
clip empty
nmcli con $(nmcli con show | tail -3 | head -1 | cut -d' ' -f1) up
nmcli con "$(nmcli con show | tail -3 | head -1 | cut -d' ' -f1)" up
nmcli con "$(nmcli con show | tail -3 | head -1 | awk '{ print $2 }')" up
nmcli con up "$(nmcli con show | tail -3 | head -1 | awk '{ print $2 }')"
nmcli con show
ip a
ssh -p22222 root@192.168.8.1
ar750s.root
nautilus .ssh
ar750s.ssh 
nmcli dev wifi --rescan yes
nmcli con show scarab-guest_5GHz 
ar750s.scarab
nmcli con show
ar750s.ssh 
ar750s.root
watch -n1 "curl https://10.10.10.1/cgi-bin/luci"
watch -n1 "curl http://10.10.10.1/cgi-bin/luci; printf $(date -Is)\n"
watch -n1 "curl http://10.10.10.1/cgi-bin/luci; printf $(date -Is)\n"
sudo systemctl start NetworkManager
journalctl -u NetowrkManager
ip a
nmcli con show
sudo systemctl stop NetworkManager
man bash
parted /dev/sda
sudo parted /dev/sda
parted /dev/sda
sudo parted /dev/sda
sensors | grep -i 'core\s[0-9]'
sensors | command -p grep -i 'core\s[0-9]'
sensors | command -p grep -i 'core\s[0-9]' | cut -d' ' -f2
sensors | command -p grep -i 'core\s[0-9]' | cut -d' ' -f3
sensors | command -p grep -i 'core\s[0-9]' | cut -d\t -f3
sensors | command -p grep -i 'core\s[0-9]' | cut -d\t -f2
sensors | command -p grep -i 'core\s[0-9]' | cut -d\t -f1
sensors | command -p grep 'Core 0:'
sensors | command -p grep 'Core 0:' | cut -d' ' -f2
sensors | command -p grep 'Core 0:' | cut -d'    ' -f2
sensors | command -p grep 'Core 0:' | cut -d' ' -f3
sensors | command -p grep 'Core 0:' | cut -d' ' -f4
sensors | command -p grep 'Core 0:' | awk '{ print "$1 " " $2" " $3" }'
sensors | command -p grep 'Core 0:' | awk '{ print $1 $2 $3 }'
sensors | command -p grep 'Core 0:' | awk '{ printf "$1\s$2\s\s\s\s$3" }'
sensors | command -p grep 'Core 0:' | awk '{ printf "$1\b$2\b\b\b\b$3" }'
sensors | command -p grep 'Core 0:' | awk '{ printf "$1\b$2\b\b\b\b$3\n" }'
sensors | command -p grep 'Core 0:' | awk '{ printf "$1 $2 $3\n" }'
sensors | command -p grep 'Core 0:' | awk '{ printf $1 $2 $3\n }'
sensors | command -p grep 'Core 0:' | awk '{ printf $1 $2 $3 }'
sensors | command -p grep 'Core 0:' | awk '{ printf $1, $2, $3 }'
sensors | command -p grep 'Core 0:' | awk '//{ printf $1, $2, $3 }'
sensors | command -p grep 'Core 0:' | awk '//{ print $1, $2, $3 }'
sensors | command -p grep 'Core 0:' | awk '//{ print $1, $2, $3 }'; printf \s; printf -- foo
sensors | command -p grep 'Core 0:' | awk '//{ print $1, $2, $3 }'; printf -- foo
sensors | command -p grep 'Core 0:' | awk '//{ print $1, $2, $3, \s }'
sensors | command -p grep 'Core 0:' | awk '//{ print $1, $2, $3}'
sensors | command -p grep 'Core 0:' | awk '{ printf $1%s$2%s%s $3}'
sensors | command -p grep 'Core 0:' | awk '{ printf $1%s$2%s%s$3}'
sensors | command -p grep 'Core 0:' | awk { 'printf $1%s$2%s%s$3' }
sensors | command -p grep 'Core 0:' | awk '{ 'printf $1%s$2%s%s$3' }'
sensors | command -p grep 'Core 0:' | awk '{ printf "%s\s%s\s\s%s", $1, $2, $3}'
sensors | command -p grep 'Core 0:' | awk '{ printf "%s\t%s\t\t%s", $1, $2, $3}'
sensors | command -p grep 'Core 0:' | awk '{ printf "%s\b%s\b\b%s", $1, $2, $3}'
sensors | command -p grep 'Core 0:' | awk '{ printf "%s\b%s\b\b%s\n", $1, $2, $3}'
sensors | command -p grep 'Core 0:' | awk '{ printf "%s%s%s\n", $1, $2, $3}'
sensors | command -p grep 'Core 0:' | awk '{ printf "%s %s  %s\n", $1, $2, $3}'
sensors | command -p grep 'Core 0:' | awk '{ printf "%s %s  %s ", $1, $2, $3}'
for core in {0..3}; do sensors | command -p grep "Core $core:" | awk '{ printf "[ %s %s  %s] ", $1, $2, $3}'; done
for core in {0..3}; do sensors | command -p grep "Core $core:" | awk '{ printf "[ %s %s  %s] ", $1, $2, $3}'; printf \n; done
for core in {0..3}; do sensors | command -p grep "Core $core:" | awk '{ printf "[ %s %s  %s] ", $1, $2, $3}'; printf "\n"; done
for core in {0..3}; do sensors | command -p grep "Core $core:" | awk '{ printf "[ %s %s  %s] ", $1, $2, $3}'; done; printf "\n"
sensors
for core in {0..3}; do sensors | grep -i "core $core:" | awk '{ printf "[ %s %s  %s] ", $1, $2, $3}'; done; printf "\n"
for core in {0..3}; do sensors | grep -i "core $core:" | awk '{ printf "[ %s ] ", $3}'; done; printf "\n"
for core in {0..3}; do sensors | grep -i "core $core:" | awk '{ printf "[ %s |", $3}'; done; printf "\n"
for core in {0..3}; do sensors | grep -i "core $core:" | awk '{ printf "%s |", $3}'; done; printf "\n"
for core in {0..3}; do sensors | grep -i "core $core:" | awk '{ printf "%s | ", $3}'; done; printf "\n"
sensors | grep -iE 'left|right'
sensors | grep -iE 'left|right' | awk '{ print $4 }'
sensors | grep -iE 'left|right' | awk '{ printf "%s %s", $4, $5}'
sensors | grep -iE 'left' | awk '{ printf "%s %s", $4, $5}'
sensors | grep -i 'left' | awk '{ printf "%s %s", $4, $5}'
top
ip a
nmcli con show
sudo systemctl stop NetworkManager
man bash
parted /dev/sda
sudo parted /dev/sda
top | grep Cpu
top -t| grep Cpu
top -h
top -v
top -b
top -b1
top -1 | grep -i cpu0
top -2
top -12
top
man top
top -1t
top -1
pgrep firefox
pgrep GeckoMain
kill $(pgrep GeckoMain)
kill $(command -p pgrep GeckoMain)
sudo iotop
sensors
sudo iotop
sensors
echo _OSTREE_GRUB2_IS_EFI
echo $_OSTREE_GRUB2_IS_EFI
sudo grub2-mkconfig | less
sudo su -c "_OSTREE_GRUB2_IS_EFI=1 grub2-mkconfig | less"
sudo su -c "_OSTREE_GRUB2_IS_EFI=1 grub2-mkconfig -o {/boot/efi/EFI/fedora/grub.cfg,/etc/grub2-efi.cfg}"
grep -E '(linux|initrd)16' /boot/{efi/EFI/fedora,grub2}/grub.cfg
sudo grep -E '(linux|initrd)16' /boot/{efi/EFI/fedora,grub2}/grub.cfg
sudo su -c "WITH_MODERN_GRUB=1 grub2-mkconfig | less"
sudo su
fedoraproject
sudo su
sudo su
la /boot/grub2/
sudo ls -Al /boot/grub2/
set WITH_MODERN_GRUB=0
echo $WITH_MODERN_GRUB
journalctl -xb
journalctl -xe
journalctl -xe
for ((c=0;c<4;c++)); do sensors -j | jq '."coretemp-isa-0000"."Core $c"."temp$((c + 2))_input"'
for ((c=0;c<4;c++)); do sensors -j | jq '."coretemp-isa-0000"."Core $c"."temp$((c + 2))_input"'; done
set -x; for ((c=0;c<4;c++)); do sensors -j | jq '."coretemp-isa-0000"."Core $c"."temp$((c + 2))_input"'; done; set +x
set -x; for ((c=0;c<4;c++)); do cpu="\'.\"coretemp-isa-0000\".\"Core $c\".\"temp$((c + 2))_input\"\'; sensors -j | jq $cpu; done; set +x

set -x; for ((c=0;c<4;c++)); do cpu="\'.\"coretemp-isa-0000\".\"Core $c\".\"temp$((c + 2))_input\"\'"; sensors -j | jq $cpu; done; set +x
set -x; for ((c=0;c<4;c++)); do cpu="'."coretemp-isa-0000"."Core $c"."temp$((c + 2))_input"'"; sensors -j | jq $cpu; done; set +x
set -x; for ((c=0;c<4;c++)); do cpu="'."coretemp-isa-0000"."Core $c"."temp$((c + 2))_input"'"; sensors -j | jq "$cpu"; done; set +x
set -x; for ((c=0;c<4;c++)); do cpu=."coretemp-isa-0000"."Core $c"."temp$((c + 2))_input"; sensors -j | jq "$cpu"; done; set +x
set -x; for ((c=0;c<4;c++)); do cpu=.\"coretemp-isa-0000\".\"Core $c\".\"temp$((c + 2))_input\"; sensors -j | jq "$cpu"; done; set +x
set -x; for ((c=0;c<4;c++)); do cpu=\.\"coretemp-isa-0000\".\"Core $c\".\"temp$((c + 2))_input\"; sensors -j | jq "$cpu"; done; set +x
chmod +x sensors.sh 
CPU0=$(sensors -j | jq ."coretemp-isa-0000"."Core 0"."temp2_input")
./sensors.sh
for i in {0..100}; do ./sensors.sh; done
mv sensors.sh ./bin/cpu-temps-executor
ll ./bin
ll ./bin/
cpu-temps-executor
cpu-temps-executor; printf 
cpu-temps-executor; printf "\n"
help exec
which cpu-temps
cpu-temps
cpupower --help
cpupower monitor
cat /sys/class/thermal/thermal_zone[0-9]*/temp
cat /sys/class/thermal/thermal_zone*/temp
sudo cat /sys/class/thermal/thermal_zone*/temp
exec cpu-temps-executor 
exec cpu-temps-executor 
bash -c /var/home/bin/cpu-temps-executor 
bash -- "/var/home/bin/cpu-temps-executor"
man bash
bash -- /var/home/bin/cpu-temps-executor
bash "/var/home/bin/cpu-temps-executor"
bash -- "/var/home/ebeale/bin/cpu-temps-executor"
sensors -j | jq '."Left side"."fan1_input"'
sensors -j | jq '."Left side "."fan1_input"'
sensors -j | jq '."Left side  "."fan1_input"'
sensors -j | jq '."applesmc-isa-0300"."Left side"."fan1_input"'
sensors -j | jq '."applesmc-isa-0300"."Left side  "."fan1_input"'
echo sensors -j | jq \'.\"applesmc-isa-0300\".\"Left side  \".\"fan1_input\"\' >> bin/cpu-temps-executor 
echo "sensors -j | jq \'.\"applesmc-isa-0300\".\"Left side  \".\"fan2_input\"\'" >> bin/cpu-temps-executor 
sensors -j | jq '."applesmc-isa-0300"."Right side  "."fan2_input"'
sensors -j | jq '."applesmc-isa-0300"."Right side   "."fan2_input"'
sensors -j | jq '."applesmc-isa-0300"."Right side "."fan2_input"'
sensors -j | jq '."jc42-i2c-11-44"."temp1"."temp1_input"'
cpu-temps-executor
sensors -j | jq '."Core *"."temp*_input"'
which smartmon-tools
which smartctl
which hddtemp
man udisks
man udiskctl
man udisksctl
