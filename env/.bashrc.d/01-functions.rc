#!/usr/bin/env bash

## Shell functions and aliases

# which
which() {
    input=$1
    type=$(type -t $input)
    
    case $type in
	alias|function) command -V $input ;;
	          file) command -v $input ;;
	             *) command -vV $input
    esac    
}

# ls
{ unalias ls; unalias ll; } 2>/dev/null || :
ls() { command ls --color=auto --sort=extension --group-directories-first -F $@; }
la() { ls -Al $@; }
ll() { ls -l $@; }

# tmux
tls() { tmux list-sessions $@; }
tlw() { tmux list-windows $@; }
tlp() { tmux list-panes $@; }

# emacs
emacs() {
    if [[ UID -ne 0 && EUID -ne 0 ]]; then
	command emacsclient -nw $@
    else
	command emacs $@
    fi    
}

emacsctl() {    
    _usage() { echo "Usage: emacsctl <enable|disable|start|stop|restart|reload|status>"; }
    
    case $1 in
	enable|disable)
	    systemctl --user $1 --now emacs.service ;;
	start|stop|restart|status)
	    systemctl --user $1 emacs.service ;;
	reload)
	    systemctl --user restart emacs.service ;;
	*)
	    _usage
    esac
}

# rpm-ostree
ro() { rpm-ostree "$@"; }

# dnf
# dnf() {
#     local toolbox="fedora-latest-dnf"
#     _run() { toolbox run --container "$toolbox" $@; }
#     _create-toolbox() {
# 	local conf="/etc/dnf/dnf.conf"
# 	local -a params=( "fastest_mirror=True" "max_parallel_downloads=20" )
# 	toolbox create "$toolbox"
# 	run command dnf install glibc-langpack-en -y
# 	podman exec -d "$toolbox" bash -c "sudo echo ${params[0]} >> $conf"
# 	podman exec -d "$toolbox" bash -c "sudo echo ${params[1]} >> $conf"
#     }
    
#     if [[ -f /run/.containerenv ]]; then
# 	sudo dnf $@
#     elif podman ps -a | command grep -q "$toolbox"; then
# 	_run sudo command dnf $@
#     else
# 	_create-toolbox >/dev/null 2>&1
# 	_run sudo command dnf $@
#     fi    
# }

# encapsulate positional parameter splitting. only works if ${args[0]} is a sub-command
# also needs concurrency guarantees, I think!
split-params() { args=( $@ ); first=${args[0]}; rest=( ${args[@]:1:${#args[@]}} ); }
unset-split-params() { unset args first rest; }

# simple debug function with some problems
debug() {
    local input=$@

    tput bold
    set -x
    ${input}
    set +x
    tput sgr0
}

# flatpak
flatpak() {
    local args=( "$@" )
    local first="${args[0]}"
    local rest=( "${args[@]:1:${#args}}" )
    
    _flatpak() { command flatpak "$@"; }     
    _grep() { command grep -i "$@"; }

    if [[ "${rest[0]}" =~ --help|-h ]]; then
	_flatpak "$first" "${rest[0]}"
    else	
	case "$first" in
	    update|upgrade)
		_flatpak list | cut -f2 | xargs -r flatpak --assumeyes "$first"
		;;
	    kill)
		for proc_name in "${rest[@]}"; do
		    _flatpak ps | _grep "$proc_name" | cut -f1 | xargs -rI {} flatpak "$first" {}
		done
		;;
	    *)
		_flatpak "$first" "${rest[@]}"
	esac
    fi
}

# date
date() { 
    if (( ${#@} == 0 )); then
        command date +'%a %b %e %R %Z %Y';
    else
        command date "$@";
    fi
}
