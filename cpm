#!/bin/bash

# Wrapper function around Google Chromium. Allows custom "profiles" by way of individual
# data directories in ~/.config/chromium. Useful for binding keyboard shortcuts to a Work
# or Personal profile:
#
#  - creates data dir in ~/.config/chromium based on passed arg {personal|work|incognito|debug}
#  - creates cache dir in /tmp/chromium/
#  - Incognito destroys both data and cache dir on close
#  - Debug is run at CLI. It prints to stdout and appends to ~/.config/chromium/cpm.log

# Main
cpm() {
    # string --> side effect: many    
    grep() {
	# string --> strings
	/usr/bin/grep "$@"
    }
    
    running_pids() {
	# profile --> list of pids
	ps -ax | grep -v grep | grep "chromium-browser" \
	    | grep "$1" \
	    | awk '{ print $1 }'
    }

    kill_pid() {
	# profile --> side effect: kill pids
	for pid in $(running_pids "$1"); do
	    [[ ! -z "$pid" ]] && kill "$pid" &
	done
	exit 0
    }

    usage() {
	# empty --> side effect: print help message
	printf "\nUsage: cpm [kill] {personal|work|incognito|debug}\n\n"
	printf "Exits are one of:\n\n"
	printf "    1: This help message.\n"
	printf "    2: Profile is already running.\n"
	printf "    3: Profile directory could not be created.\n\n"

	exit 1
    }

    # Only create variable bindings if launching a profile
    case "$1" in
	personal|work|incognito)
	    local chromium="/usr/bin/chromium-browser"
	    local chromium_dir="${HOME}/.config/chromium"
	    local data_dir="--user-data-dir=$chromium_dir/$1"
	    local cache_dir="--disk-cache-dir=/tmp/chromium/cache-$1"

	    # Check for already running process
	    if [[ ! -z $(running_pids "$1") ]]; then
		exit 2
	    fi
	    
	    # If dir does not exist; create it. Then change to dir.
	    if [[ ! -d "$chromium_dir" ]]; then
		mkdir -p "$chromium_dir" || exit 3
		cd "$chromium_dir"
	    fi
    esac
    
    # Launch a chromium instance
    case "$1" in
        personal|work)
	    "$chromium" "$data_dir" "$cache_dir" & wait "$!"
	    kill_pid "$1"
	    ;;
	incognito)
	    "$chromium" --"$1" "$data_dir" "$cache_dir" & wait "$!"
	    rm -r "${data_dir#'--user-data-dir='}" "${cache_dir#'--disk-cache-dir='}"
	    kill_pid "$1"
	    ;;
	debug)
	    set -x
	    cpm incognito
	    set +x
	    ;;
	kill)
	    kill_pid "$2"
	    ;;
	*)
	    usage
    esac
}

(cpm "$1" >/dev/null 2>&1 &)
