
#!/bin/bash

## Start tmux on every shell login
tmux-start() {
    if which tmux >/dev/null 2>&1; then
        if [[ -z "$TMUX" ]] ;then
            ID="$( tmux ls | grep -vm1 attached | cut -d: -f1 )" # get the id of a deattached session
            if [[ -z "$ID" ]] ;then # if not available create a new one
                tmux new-session
            else
                tmux attach-session -t "$ID" # if available attach to it
            fi
        fi
    fi
}

## Start 9h of rain sleep sounds
rain() {
    local path="$HOME/Music"
    local track="rain.mp3"
    local opts="--no-video"
    local mpv="/usr/bin/mpv"

    "$mpv" "$opts" "$path"/"$track" >/dev/null 2>&1 &
    echo "$!" > /tmp/rain.$!
}

## Add, commit, push functions and aliases
gitrc() {
    git add ~/.bashrc
    git add ~/.aliases
    git add ~/.functions

    git commit -m "auto generated message."
    git push origin master
}

## mpw helper function
mpw() {
    _copy() {
        _clips=('pbcopy' 'xclip' 'gpaste-client')
        _use="${_clips[2]}"

        case "$_use" in
            "${_clips[0]}")
                hash "$_use" 2>/dev/null && "$_use" ;;
            "${_clips[1]}")
                hash "$_use" 2>/dev/null && "$_use" ;;
            "${_clips[2]}")
                hash "$_use" 2>/dev/null && "$_use" add-password 'Master Password' ;;
            *)
                cat; echo 2>/dev/null
                return
        esac

        echo >&2 "Copied!"
    }   

    # Empty the clipboard
    :| _copy 2>/dev/null

    # Ask for the user's name and password if not yet known.
    MP_FULLNAME=${MP_FULLNAME:-$(ask 'Your Full Name:')}

    # Start Master Password and copy the output.
    printf %s "$(MP_FULLNAME=$MP_FULLNAME command mpw "$@")" | _copy

    # for gpaste-client clear last password after 10 seconds
    if [[ "$_use" = "${_clips[2]}" ]]; then
        ({ sleep 10; gpaste-client delete-password 'Master Password'; } >/dev/null 2>&1 &)
    fi
    
}
export MP_FULLNAME=Elijah\ Thomas\ Beale

## Port open check
port-open() {
    local address="$1"
    local port="$2"
    local aregex="([0-9]{1,3}\.){3}[0-9]{1,3}"
    local pregex="[0-9]{1,5}"
    
    if [[ "$address" =~ $aregex ]]; then
        if [[ "$port" =~ $pregex ]]; then
            if [[ $(nc -w 5 -z "$address" "$port"; echo $?) = 0 ]]; then
                echo "Port open!"
            else
                echo "Port closed or unreachable..."
            fi
        else
            echo "Please enter a valid port number!"
        fi
    else
        echo "Please enter a valid address!"
    fi
}

## Add new alias
new-alias() {
    echo "$@" >> ~/.aliases
}

## Simple calculator
mcalc() {
    local expr="$@"
    echo "$expr" | bc
}

## Start chromium in incognito mode, run out of a temp folder, destroy
## temp folder on exit
incognito() {
    local data_dir="/tmp/incognito"

    if [[ ! -d "$data_dir" ]]; then
        mkdir "$data_dir"
    fi

    # run chromium in the background and mask job exit status
    ({ chromium-browser \
           --incognito \
           --user-data-dir="$data_dir" \
           "https://images.google.com" & wait $! && rm -r "$data_dir"; } >/dev/null 2>&1 &) 
}
