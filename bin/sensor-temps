#!/usr/bin/env bash

## print cpu core temps
CPU0() { sensors -j | jq '."coretemp-isa-0000"."Core 0"."temp2_input"' | sed -r 's:[0-9]{2}$::g'; }
CPU1() { sensors -j | jq '."coretemp-isa-0000"."Core 1"."temp3_input"' | sed -r 's:[0-9]{2}$::g'; }
CPU2() { sensors -j | jq '."coretemp-isa-0000"."Core 2"."temp4_input"' | sed -r 's:[0-9]{2}$::g'; }
CPU3() { sensors -j | jq '."coretemp-isa-0000"."Core 3"."temp5_input"' | sed -r 's:[0-9]{2}$::g'; }

cpu-temps() {
    printf "CPU: [  %s  ]" "$(for ((c=0;c<4;c++)); do printf "%s" "$(CPU$c)"; [[ $c -lt 3 ]] && printf "  -  "; done)";
    printf "    "
}

## print fan speeds
FAN_L() { sensors -j | jq '."applesmc-isa-0300"."Left side  "."fan1_input"' | sed -r 's:\.[0-9]{3}::g'; }
FAN_R() { sensors -j | jq '."applesmc-isa-0300"."Right side "."fan2_input"' | sed -r 's:\.[0-9]{3}::g'; }

fan-speeds() {
    printf "FAN: [  %s  ]" "$(for fan in L R; do printf "%s" "$(FAN_$fan)"; [[ $fan = L ]] && printf "  -  "; done)";
    printf "    "
}

## print ram temps
RAM0() { sensors -j | jq '."jc42-i2c-11-44"."temp1"."temp1_input"' | sed -r 's:[0-9]{2}$::g'; }

ram-temps() {
    printf "RAM: [  %s  ]" "$(for ram in 0; do printf "%s" "$(RAM$ram)"; [[ $ram -lt 0 ]] && printf "  -  "; done)"
    printf "    "
}

## print gpu temp
GPU0() { sensors -j | jq '."radeon-pci-0100"."temp1"."temp1_input"' | sed -r 's:[0-9]{2}$::g'; }

gpu-temps() {
    printf "GPU: [  %s  ]" "$(for gpu in 0; do printf "%s" "$(GPU$gpu)"; [[ $gpu -lt 0 ]] && printf "  -  "; done)"
    printf "    "
}

## print ssd temp
ssd-temps() {
    local raw_temp_f="$(udisksctl dump /dev/sda | grep -i 'smarttemperature' | awk '{ print $2 }')"
    local scale_temp_c="$(printf "%s\n" "scale=1; ($raw_temp_f - 32) / 1 * 5/9" | bc)"

    printf "SSD: [  %s  ]" "$scale_temp_c"
    printf "    "
}

## main
cpu-temps
fan-speeds
ram-temps
gpu-temps
ssd-temps
