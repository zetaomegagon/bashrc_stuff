#!/usr/bin/env bash

## variables to make pretty printing more explicit
opn="["    sep="]  ["  cls="]"
spc=" "    cpu="CPU:"  ram="RAM:"
gpu="GPU:" ssd="SSD:"  fan="FAN:"

## functions for facilitating pretty printing
print-sep() { printf "%4s" "$spc"; }
precision-one() { local input=$1; sed -r 's:[0-9]{2}$::g' < <(cat $input); }

## print cpu core temps
CPU() { local c=$1; local n=$2; sensors -j | jq ".\"coretemp-isa-0000\".\"Core ${c}\".\"temp${n}_input\"" | precision-one; }

cpu-temps() {
    set -x
    printf "%s%4s%s%4s%s%4s%s" \
           "$opn" \
           "$spc" \
           "$cpu" \
           "$spc" \
           "$(for ((core=0;core<4;core++)); do printf "%s" "$(CPU $core $((core + 2)))"; (( core < 3 )) && print-sep; done)" \
           "$spc" \
           "$sep"
    
    print-sep
    set +x
}

## print fan speeds
FAN_L() { sensors -j | jq '."applesmc-isa-0300"."Left side  "."fan1_input"' | sed -r 's:\.[0-9]{3}::g'; }
FAN_R() { sensors -j | jq '."applesmc-isa-0300"."Right side "."fan2_input"' | sed -r 's:\.[0-9]{3}::g'; }

fan-speeds() {
    local count=1
    
    printf "%s%4s%s%s%s" \
           "$fan" \
           "$spc" \
           "$(for fan in L R; do count+=1; printf "%s" "$(FAN_$fan)"; (( count > 2 )) && print-sep; done)" \
           "$cls"
    
    print-sep
}

## print ram temps
RAM0() { sensors -j | jq '."jc42-i2c-11-44"."temp1"."temp1_input"' | precision-one; }

ram-temps() {
    printf "%s%4s%s%4s%s" \
           "$ram" \
           "$spc" \
           "$(for ram in 0; do printf "%s" "$(RAM$ram)"; (( ram > 0 )) && print-sep; done)" \
           "$spc" \
           "$sep"
    
    print-sep
}

## print gpu temp
GPU0() { sensors -j | jq '."radeon-pci-0100"."temp1"."temp1_input"' | precision-one; }

gpu-temps() {
    printf "%s%4s%s%4s%s" \
           "$gpu" \
           "$spc" \
           "$(for gpu in 0; do printf "%s" "$(GPU$gpu)"; (( gpu < 0 )) && print-sep; done)" \
           "$spc" \
           "$sep"
    
    print-sep
}

## print ssd temps
SSD0() { local input=$1; hddtemp --foreground --unit=C --numeric /dev/sda; }

ssd-temps() {
    printf "%s%4s%s%4s%s" \
           "$ssd" \
           "$spc" \
           "$(for ssd in 0; do printf "%s%s" "$(SSD$ssd).0"; (( ssd < 0 )) && print-sep; done)" \
           "$spc" \
           "$sep"
    
    print-sep
}

## main
cpu-temps
ram-temps
gpu-temps
ssd-temps
fan-speeds
